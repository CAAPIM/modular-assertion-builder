/*
 * Copyright (c) 2017 CA. All rights reserved.
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */
plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
    id "org.sonarqube" version "2.6.2"
    id "com.srcclr.gradle" version "3.0.3"
}

description = 'The modular assertion builder plugin can be used to build modular assertions for the CA API Gateway'
group 'com.ca.apim.gateway'
tag {
    message {
        "version: ${version} build-date: " + new Date().format('yyyy-MM-dd\'T\'HH:mm:ss')
    }
}
project.ext.'gradle.publish.key' = System.env.GRADLE_PUBLISH_KEY
project.ext.'gradle.publish.secret' = System.env.GRADLE_PUBLISH_SECRET

apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'com.srcclr.gradle'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation gradleApi()
    testImplementation 'junit:junit:4.12'
}

repositories {
    mavenCentral()
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

artifacts {
    archives javadocJar, sourceJar
}

jar {
    manifest {
        attributes(
                "Implementation-Title": name,
                "Implementation-Version": archiveVersion)
    }
}

// Create the pom configuration:
publishing {
    publications {
        gwPlugin( MavenPublication ) {
            from components.java

            artifact( sourceJar ) {
                classifier = 'sources'
            }

            artifact( javadocJar ) {
                classifier = "javadoc"
            }
            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/ca-api-gateway/modular-assertion-builder'

                organization {
                    name = 'CA API Gateway'
                    url = 'https://github.com/ca-api-gateway'
                }

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/ca-api-gateway/modular-assertion-builder/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/ca-api-gateway/modular-assertion-builder'
                    connection = 'scm:git:https://github.com/ca-api-gateway/modular-assertion-builder.git'
                    developerConnection = 'scm:git:git@github.com:ca-api-gateway/modular-assertion-builder.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/ca-api-gateway/modular-assertion-builder/issues'
                }

                developers {
                    developer {
                        id = 'apigatewayopensource'
                        name = 'CA API Gateway Bot'
                        email = 'API-Gateway-OpenSource@ca.com'
                        organization = 'CA API Gateway'
                        organizationUrl = 'https://github.com/ca-api-gateway'
                    }
                }
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/ca-api-gateway/modular-assertion-builder'
    vcsUrl = 'https://github.com/ca-api-gateway/modular-assertion-builder'

    plugins {
        greetingsPlugin {
            id = 'com.ca.apim.gateway.modular-assertion-builder'
            displayName = 'CA API Gateway Modular Assertion Builder Gradle Plugin'
            description = 'The modular assertion builder plugin can be used to build modular assertions for the CA API Gateway'
            tags = ['ca api gateway','building']
        }
    }
}

model {
    tasks.generatePomFileForGwPluginPublication {
        destination = file( "${buildDir}/generated-pom.xml" )
    }
}

task generatePomFile( dependsOn: 'generatePomFileForGwPluginPublication' )

wrapper {
    gradleVersion = '8.9'
}
